SELECT * FROM MANAGER;
-- FINDING THE 2ND LARGEST SALARY 
SELECT NAME, SALARY FROM MANAGER ORDER BY SALARY DESC LIMIT 1,1;

-- FINDING THE 3RD LARGEST
SELECT NAME,SALARY FROM MANAGER ORDER BY SALARY DESC LIMIT 2,1; 

-- FINDING THE 4TH LARGEST SALARY 
SELECT NAME, SALARY FROM MANAGER ORDER BY SALARY DESC LIMIT 3,1;

-- FINDING THE 1ST LARGEST SALARY 
SELECT NAME, SALARY FROM MANAGER ORDER BY SALARY DESC LIMIT 0,1;

CREATE TABLE ORDERS(
PRDER_ID INT, ORDER_DATE DATE,CUSTOMER_ID INT);
CREATE TABLE CUSTOMER(
CUS_ID INT,CUS_NAME VARCHAR(30),CONTACT_NAME VARCHAR(40),COUNTRY VARCHAR(30));
INSERT INTO ORDERS VALUES(101,'2023-5-2',500),(102,'2023-5-3',501),
(103,'2023-5-3',502),(104,'2023-5-4',503),(105,'2023-5-5',504);
INSERT INTO CUSTOMER VALUES(500,"RAM","RAVI","INDIA"),(504,"LUCKY","SWEETY","US"),
(503,"LIK","RUK","INDIA"),(508,"PARI","RUK","UK"),(502,"HONEY","RAMU","FRANCE");
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER;

-- JOIN
SELECT ORDERS.PRDER_ID, CUSTOMER.CUS_NAME,ORDERS.ORDER_DATE FROM ORDERS
INNER JOIN CUSTOMER ON ORDERS.CUSTOMER_ID=CUSTOMER.CUS_ID;

CREATE TABLE STAFF(
ID INT, NAME VARCHAR(20),AGE INT,PACKAGE INT);

CREATE TABLE PAYMENT(
ID INT,DA_TE DATE,STAFF_ID INT,AMOUNT INT);

INSERT INTO STAFF VALUES(100,"LIK",25,50000),(101,"RUK",30,60000),
(102,"PARI",23,40000),(104,"SAM",29,50000);

INSERT INTO PAYMENT VALUES(200,'2023-5-2',100,5000),(201,'2023-5-5',104,6000),
(205,'2023-5-2',107,8000),(203,'2023-5-7',109,2000);

SELECT * FROM STAFF;
SELECT * FROM PAYMENT;

SELECT s.ID,NAME,AGE,AMOUNT FROM STAFF s,PAYMENT p WHERE s.ID=p.STAFF_ID;

SELECT * FROM ORDERS;
ALTER TABLE ORDERS ADD SHIPPING_ID INT;
UPDATE ORDERS SET SHIPPING_ID=303 WHERE PRDER_ID=101;
UPDATE ORDERS SET SHIPPING_ID=304 WHERE PRDER_ID=102;
UPDATE ORDERS SET SHIPPING_ID=305 WHERE PRDER_ID=103;
UPDATE ORDERS SET SHIPPING_ID=302 WHERE PRDER_ID=104;
UPDATE ORDERS SET SHIPPING_ID=308 WHERE PRDER_ID=105;

CREATE TABLE SHIPPING(
SHIP_ID INT, NAME VARCHAR(20));
INSERT INTO SHIPPING VALUES(304,"EXPRESSV"),(302,"XYZ"),
(308,"ABC"),(204,"WCH");
SELECT * FROM SHIPPING;
SELECT * FROM ORDERS;
SELECT * FROM CUSTOMER;
SELECT ORDERS.PRDER_ID,CUSTOMER.CUS_NAME,SHIPPING.NAME FROM 
((ORDERS INNER JOIN CUSTOMER ON ORDERS.CUSTOMER_ID=CUSTOMER.CUS_ID)
INNER JOIN SHIPPING ON ORDERS.SHIPPING_ID=SHIPPING.SHIP_ID);

-- LEFT JOIN
SELECT CUSTOMER.CUS_NAME, ORDERS.PRDER_ID FROM CUSTOMER
LEFT JOIN ORDERS ON CUSTOMER.CUS_ID=ORDERS.CUSTOMER_ID;

SELECT CUSTOMER.CUS_NAME, ORDERS.PRDER_ID FROM CUSTOMER
LEFT JOIN ORDERS ON CUSTOMER.CUS_ID=ORDERS.CUSTOMER_ID ORDER BY CUSTOMER.CUS_NAME;

SELECT CUSTOMER.CUS_NAME, ORDERS.PRDER_ID FROM CUSTOMER
LEFT JOIN ORDERS ON CUSTOMER.CUS_ID=ORDERS.CUSTOMER_ID WHERE CUSTOMER.CUS_NAME  LIKE 'P%';
-- RIGHT JOIN
SELECT CUS_NAME, COUNTRY,ORDER_DATE FROM CUSTOMER
RIGHT JOIN ORDERS ON CUSTOMER.CUS_ID=ORDERS.CUSTOMER_ID;

SELECT CUSTOMER.CUS_NAME, ORDERS.PRDER_ID FROM CUSTOMER
LEFT JOIN ORDERS ON CUSTOMER.CUS_ID=ORDERS.CUSTOMER_ID
UNION
SELECT CUSTOMER.CUS_NAME, ORDERS.PRDER_ID FROM CUSTOMER
RIGHT JOIN ORDERS ON CUSTOMER.CUS_ID=ORDERS.CUSTOMER_ID;

SELECT CUSTOMER.CUS_NAME, ORDERS.PRDER_ID FROM CUSTOMER
FULL JOIN ORDERS ON CUSTOMER.CUS_ID=ORDERS.CUSTOMER_ID;

-- CONSTRAINTS
CREATE TABLE TEST(
ID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
C2 VARCHAR(20) NOT NULL, 
C3 VARCHAR(30) DEFAULT "Sd"
);




